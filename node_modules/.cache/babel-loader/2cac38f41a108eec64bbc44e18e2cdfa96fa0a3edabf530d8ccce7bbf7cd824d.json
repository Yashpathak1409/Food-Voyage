{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/food reciepe/src/components/pages/front-end/Homepage.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"./Home.css\";\nimport MyIngredients from \"./MyIngredients\"; // Ensure this component exists\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [recipes, setRecipes] = useState([]);\n  const [selectedRecipe, setSelectedRecipe] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [showIngredientsModal, setShowIngredientsModal] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Simulating fetch with static sample data for frontend-only\n    const sampleRecipes = [{\n      _id: \"1\",\n      name: \"Spaghetti Carbonara\",\n      image: \"https://via.placeholder.com/150\",\n      description: \"A classic Italian pasta dish.\",\n      price: 12.99,\n      ingredients: [\"Spaghetti\", \"Eggs\", \"Cheese\", \"Bacon\"],\n      videoUrl: \"https://www.youtube.com/watch?v=dZ3kFJxYV_w\"\n    }];\n    setRecipes(sampleRecipes);\n  }, []);\n  const openModal = recipe => {\n    setSelectedRecipe(recipe);\n    setIsModalOpen(true);\n    setShowIngredientsModal(false);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setSelectedRecipe(null);\n    setShowIngredientsModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-center mb-6\",\n      children: \"Recipe Gallery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe-grid-container\",\n      children: recipes.length > 0 ? recipes.map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-card\",\n        onClick: () => openModal(recipe),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: recipe.image,\n          alt: recipe.name,\n          className: \"recipe-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"recipe-name\",\n            children: recipe.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"recipe-description\",\n            children: recipe.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"recipe-price\",\n            children: [\"$\", recipe.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)]\n      }, recipe._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-gray-500\",\n        children: \"No recipes found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), isModalOpen && selectedRecipe && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: closeModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: closeModal,\n          \"aria-label\": \"Close modal\",\n          children: \"\\u2716\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"modal-title\",\n          children: selectedRecipe.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: selectedRecipe.image,\n          alt: selectedRecipe.name,\n          className: \"modal-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"modal-description\",\n          children: selectedRecipe.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"modal-price\",\n          children: [\"Price: $\", selectedRecipe.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), selectedRecipe.videoUrl && /*#__PURE__*/_jsxDEV(\"a\", {\n          href: selectedRecipe.videoUrl,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"video-button\",\n          children: \"\\uD83C\\uDFA5 Watch Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), selectedRecipe.ingredients && selectedRecipe.ingredients.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ingredients-button\",\n          onClick: () => setShowIngredientsModal(true),\n          \"aria-label\": \"View Ingredients\",\n          children: \"View Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), showIngredientsModal && (selectedRecipe === null || selectedRecipe === void 0 ? void 0 : selectedRecipe.ingredients) && /*#__PURE__*/_jsxDEV(MyIngredients, {\n      ingredients: selectedRecipe.ingredients,\n      onClose: () => setShowIngredientsModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"7yGRA0Zg8nLyI24HkR6aqxO751s=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["useState","useEffect","MyIngredients","jsxDEV","_jsxDEV","HomePage","_s","recipes","setRecipes","selectedRecipe","setSelectedRecipe","isModalOpen","setIsModalOpen","showIngredientsModal","setShowIngredientsModal","error","setError","sampleRecipes","_id","name","image","description","price","ingredients","videoUrl","openModal","recipe","closeModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onClick","src","alt","e","stopPropagation","href","target","rel","onClose","_c","$RefreshReg$"],"sources":["/Users/macbook/Desktop/food reciepe/src/components/pages/front-end/Homepage.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./Home.css\";\nimport MyIngredients from \"./MyIngredients\"; // Ensure this component exists\n\nconst HomePage = () => {\n  const [recipes, setRecipes] = useState([]);\n  const [selectedRecipe, setSelectedRecipe] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [showIngredientsModal, setShowIngredientsModal] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Simulating fetch with static sample data for frontend-only\n    const sampleRecipes = [\n      {\n        _id: \"1\",\n        name: \"Spaghetti Carbonara\",\n        image: \"https://via.placeholder.com/150\",\n        description: \"A classic Italian pasta dish.\",\n        price: 12.99,\n        ingredients: [\"Spaghetti\", \"Eggs\", \"Cheese\", \"Bacon\"],\n        videoUrl: \"https://www.youtube.com/watch?v=dZ3kFJxYV_w\"\n      }\n    ];\n    setRecipes(sampleRecipes);\n  }, []);\n\n  const openModal = (recipe) => {\n    setSelectedRecipe(recipe);\n    setIsModalOpen(true);\n    setShowIngredientsModal(false);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setSelectedRecipe(null);\n    setShowIngredientsModal(false);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-6\">\n      <h1 className=\"text-3xl font-bold text-center mb-6\">Recipe Gallery</h1>\n\n      {error && <p className=\"text-center text-red-500\">{error}</p>}\n\n      <div className=\"recipe-grid-container\">\n        {recipes.length > 0 ? (\n          recipes.map((recipe) => (\n            <div\n              key={recipe._id}\n              className=\"recipe-card\"\n              onClick={() => openModal(recipe)}\n            >\n              <img src={recipe.image} alt={recipe.name} className=\"recipe-image\" />\n              <div className=\"recipe-details\">\n                <h2 className=\"recipe-name\">{recipe.name}</h2>\n                <p className=\"recipe-description\">{recipe.description}</p>\n                <p className=\"recipe-price\">${recipe.price}</p>\n              </div>\n            </div>\n          ))\n        ) : (\n          <p className=\"text-center text-gray-500\">No recipes found.</p>\n        )}\n      </div>\n\n      {isModalOpen && selectedRecipe && (\n        <div className=\"modal-overlay\" onClick={closeModal}>\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n            <button className=\"close-button\" onClick={closeModal} aria-label=\"Close modal\">✖</button>\n            <h2 className=\"modal-title\">{selectedRecipe.name}</h2>\n            <img src={selectedRecipe.image} alt={selectedRecipe.name} className=\"modal-image\" />\n            <p className=\"modal-description\">{selectedRecipe.description}</p>\n            <p className=\"modal-price\">Price: ${selectedRecipe.price}</p>\n\n            {selectedRecipe.videoUrl && (\n              <a href={selectedRecipe.videoUrl} target=\"_blank\" rel=\"noopener noreferrer\" className=\"video-button\">\n                🎥 Watch Video\n              </a>\n            )}\n\n            {selectedRecipe.ingredients && selectedRecipe.ingredients.length > 0 && (\n              <button \n                className=\"ingredients-button\" \n                onClick={() => setShowIngredientsModal(true)} \n                aria-label=\"View Ingredients\"\n              >\n                View Ingredients\n              </button>\n            )}\n          </div>\n        </div>\n      )}\n\n      {showIngredientsModal && selectedRecipe?.ingredients && (\n        <MyIngredients ingredients={selectedRecipe.ingredients} onClose={() => setShowIngredientsModal(false)} />\n      )}\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}